AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda for purging fastly cache in response to CAPI updates

Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: content-api-fastly-cache-purger
  App:
    Description: Application name
    Type: String
    Default: fastly-cache-purger
  Stage: 
    Description: Stage name
    Type: String
    AllowedValues:
      - CODE
      - PROD
    Default: CODE
  DeployBucket:
    Description: Bucket where RiffRaff uploads artifacts on deploy
    Type: String
    Default: content-api-dist
  ConfigBucket:
    Description: Bucket where app settings are stored
    Type: String
    Default: fastly-cache-purger-config
  KinesisStream:
    Description: Name of the crier kinesis stream
    Type: String

Resources:
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${App}-${Stage}"
      Description: Fastly cache purger
      Runtime: java8
      Handler: com.gu.fastly.Lambda::handle
      MemorySize: 512
      Timeout: 30
      Role: !GetAtt LambdaRole.Arn
      Tags:
        - Key: Stack
          Value: !Ref Stack
        - Key: Stage
          Value: !Ref Stage
        - Key: App
          Value: !Ref App
      Code:
        S3Bucket: !Ref DeployBucket
        S3Key: !Sub ${Stack}/${Stage}/${App}/${App}.zip
  LambdaKinesisEvent:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !Sub "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${KinesisStream}"
      FunctionName: !Ref Lambda
      StartingPosition: TRIM_HORIZON
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole
      Policies: 
        - PolicyName: ReadConfigFromBucket
          PolicyDocument:
            Statement:
              Action:
                - s3:GetObject
                - s3:ListBucket
              Resource: !Sub arn:aws:s3:::${ConfigBucket}/*
              Effect: Allow
        - PolicyName: AllowPutMetrics
          PolicyDocument:
            Statement:
              Action:
                - cloudwatch:PutMetricData
              Resource: "*"
              Effect: Allow
        - PolicyName: AllowSNSPublish
          PolicyDocument:
            Statement:
              Action:
                - sns:Publish
              Resource: "*"
              Effect: Allow
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
  DecachedContentTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${App}-${Stage}-decached"
      DisplayName: !Sub '${App}-${Stage}-Decached'
